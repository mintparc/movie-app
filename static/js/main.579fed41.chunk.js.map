{"version":3,"sources":["components/Main/Main.js","assets/fill-heart.svg","assets/empty-heart.svg","components/Movie/Movie.js","assets/skeleton-heart.svg","components/Skeleton/Skeleton.js","App.js","index.js"],"names":["Main","id","title","summary","poster","bg","className","style","backgroundImage","src","alt","prototypes","PropTypes","number","isRequired","string","Movie","genres","favoriteMovies","saveFavorite","localStorage","setItem","JSON","stringify","handleFavoriteDelete","event","target","savedFavorites","filter","movie","setFavorite","img","EmptyHeart","onclick","handleFavorite","push","FillHeart","savedFavoriteMovies","getItem","parsedFavoriteMovies","parse","useState","includes","favorite","onClick","slice","map","genre","index","arrayOf","Skeleton","Array","fill","value","SkeletonHeart","App","state","isLoading","main","movies","getMovies","a","axios","get","data","setState","this","medium_cover_image","background_image_original","toString","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.579fed41.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Main.css'\n\nfunction Main({ id, title, summary, poster, bg }) {\n  return (\n    <div className=\"movies_main\" style={{ \n      backgroundImage: `url( ${bg} )` \n    }}>\n      <div className=\"main_gradient\"></div>\n      <img className=\"main_poster\" src={poster} alt={title} />\n      <h3 className=\"main_title\">{title}</h3>\n      <p className=\"main_summary\">{summary}</p>\n    </div>\n  ) \n}\n\nMain.prototypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  bg: PropTypes.string.isRequired,\n}\n\nexport default Main","export default __webpack_public_path__ + \"static/media/fill-heart.6dcaf848.svg\";","export default __webpack_public_path__ + \"static/media/empty-heart.c31d61db.svg\";","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './Movie.css'\nimport FillHeart from './../../assets/fill-heart.svg';\nimport EmptyHeart from './../../assets/empty-heart.svg';\n\nfunction Movie({ id, title, summary, poster, genres }) {\n  let favoriteMovies = []\n\n  const saveFavorite = () => {\n    localStorage.setItem('favorites', JSON.stringify(favoriteMovies))\n  }\n  \n  const handleFavoriteDelete = (event) => {\n    const target = event.target\n    savedFavorites()\n    favoriteMovies = favoriteMovies.filter(movie => movie !== target.id)\n    saveFavorite()\n    setFavorite({\n      img: EmptyHeart,\n      onclick: handleFavorite\n    })\n  }\n  \n  const handleFavorite = (event) => {\n    const target = event.target\n    savedFavorites()\n    favoriteMovies.push(target.id)\n    saveFavorite()\n    setFavorite({\n      img: FillHeart,\n      onclick: handleFavoriteDelete\n    })\n  }\n\n  const savedFavorites = () => {\n    const savedFavoriteMovies = localStorage.getItem('favorites')\n    if (savedFavoriteMovies !== null) {\n      const parsedFavoriteMovies = JSON.parse(savedFavoriteMovies)\n      favoriteMovies = parsedFavoriteMovies\n    }\n  }\n\n  savedFavorites()\n  \n  const [ favorite, setFavorite ] = useState({\n    img: favoriteMovies.includes(id) ? FillHeart : EmptyHeart,\n    onclick: favoriteMovies.includes(id) ? handleFavoriteDelete : handleFavorite\n  })\n\n  return (\n    <div className=\"movies_movie\">\n      <img className=\"movie_poster\" src={poster} alt={title} />\n      <div className=\"movie_data\">\n        <img className=\"movie_heart\" id={id} src={favorite.img} onClick={favorite.onclick} alt=\"heart\"></img>\n        <h3 className=\"movie_title\">{title}</h3>\n        <ul className=\"movie_genres\">{genres.slice(0, 3).map((genre, index) => <li key={index} className=\"genres_genre\">{genre}</li>)}</ul>\n        <p className=\"movie_summary\">{summary}</p>\n      </div>\n    </div>\n  ) \n}\n\nMovie.prototypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie","export default __webpack_public_path__ + \"static/media/skeleton-heart.fdb76413.svg\";","import React from 'react'\nimport './Skeleton.css'\nimport SkeletonHeart from './../../assets/skeleton-heart.svg';\n\n\nfunction Skeleton() {\n  return (\n    <div className=\"skeleton\">\n      <div className=\"skeleton_main\">\n        <div className=\"skeleton_main_poster\"></div>\n        <p className=\"skeleton_main_title\"></p>\n        <p className=\"skeleton_main_summary\"></p>\n      </div>\n      <div className=\"skeleton_movie\">\n        {Array(20).fill('').map((value, index) => (\n          <div className=\"skeleton_movies\" key={index}>\n            <div className=\"skeleton_movies_img\"></div>\n            <div className=\"skeleton_movies_data\">\n              <img className=\"skeleton_movies_heart\" src={SkeletonHeart} alt=\"heart\"></img>\n              <p className=\"skeleton_movies_title\"></p>\n              <p className=\"skeleton_movies_genres\"></p>\n              <p className=\"skeleton_movies_summary\"></p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  ) \n}\n\nexport default Skeleton","import React from 'react';\nimport axios from 'axios'\nimport Main from './components/Main/Main'\nimport Movie from './components/Movie/Movie'\nimport Skeleton from './components//Skeleton/Skeleton'\nimport './App.css'\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    main: [],\n    movies: []\n  }\n  getMovies = async () => {\n    const { data: { data: { movies: { 0: main } } } } = await axios.get('https://yts-proxy.now.sh/list_movies.json?limit=1&sort_by=like_count&page=3')\n    const { data: { data: { movies } } } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=like_count&quality=3D')\n    this.setState({ main, movies, isLoading: false })\n  }\n  componentDidMount() {\n    this.getMovies()\n  }\n  render() {\n    const { isLoading, main, movies } = this.state\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <Skeleton />\n        ) : ( \n          <div className=\"movies\">\n            <Main \n              key={main.id}\n              id={main.id}\n              title={main.title}\n              summary={main.summary}\n              poster={main.medium_cover_image}\n              bg={main.background_image_original}\n            />\n            <div className=\"movie\">\n            {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id.toString()}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n            </div>\n          </div>\n        )}\n      </section>\n    )}\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}